apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-coaching-gateway
  namespace: ai-coaching
  labels:
    app: ai-coaching-gateway
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-coaching-gateway
  template:
    metadata:
      labels:
        app: ai-coaching-gateway
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: gateway
        image: ai-coaching/gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        - containerPort: 3002
          name: websocket
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: PORT
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: ai-coaching-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-coaching-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-coaching-secrets
              key: REDIS_PASSWORD
        - name: NATS_URL
          valueFrom:
            configMapKeyRef:
              name: ai-coaching-config
              key: NATS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ai-coaching-secrets
              key: JWT_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: ai-coaching-secrets
              key: SENTRY_DSN
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /app/temp
      volumes:
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      imagePullSecrets:
      - name: registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: ai-coaching-gateway-service
  namespace: ai-coaching
  labels:
    app: ai-coaching-gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  - port: 3002
    targetPort: 3002
    protocol: TCP
    name: websocket
  selector:
    app: ai-coaching-gateway
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-coaching-gateway-ingress
  namespace: ai-coaching
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - api.ai-coaching.com
    secretName: ai-coaching-tls
  rules:
  - host: api.ai-coaching.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-coaching-gateway-service
            port:
              number: 80
